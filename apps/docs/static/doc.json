{
	"rows": [
		{
			"cols": [
				{
					"gap": "gap-6",
					"rows": [
						{
							"nodeClass": "mt-6",
							"component": "TextBox",
							"props": {
								"text": "Documentation",
								"type": "h1"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Flexilte is a powerful Svelte framework that transforms JSON into flex-based pages. It supports any frontend UI framework and custom components, allowing for dynamic page creation and easy integration with AI-generated layouts."
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "DEMO: You are looking at it! Yes this entire website is Flexilte json generated! At the bottom of every page, there is a link to check the original JSON config.",
								"classList": "font-bold"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Features",
								"type": "h2"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "- JSON-driven layout generation\n- Support for custom components and any frontend UI framework\n- AI-powered page generation\n- Drag-and-drop editor\n- Flexible and responsive designs"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Installation",
								"type": "h2"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "To install Flexilte with skeleton UI wrapper:"
							}
						},
						{
							"component": "CodeBlock",
							"props": {
								"code": "npm install @flexilte/core",
								"language": "bash"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Basic Usage",
								"type": "h2"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Assuming you are ready using a framework. Lets say flowbite. "
							}
						},

						{
							"component": "CodeBlock",
							"props": {
								"code": "<script lang=\"ts\">\nimport { Flexilte } from '@flexilte/core';\n  import { Tags } from \"flowbite-svelte\";\n    export const components = {\n        Tags,\n    };\n    const layoutConfig: LayoutConfig<typeof components> = {\n        \"rows\": [\n            {\n                \"cols\": {\n                    \"component\": \"Tags\",\n                    \"props\": {\n                        \"availableTags\": [\n                            \"Cat\",\n                            \"Dog\"\n                        ],\n                        \"placeholder\": \"Your favorite pet?\",\n                     }\n                }\n            }\n        ]\n    }\n</script>\n<Flexilte {LayoutConfig} {components}></Flexilte>",
								"language": "ts"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "This will render:"
							}
						},
						{
							"component": "Tags",
							"props": {
								"value": ["Cat", "Dog"],
								"placeholder": "Your favorite pet?"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Layout Config Model",
								"type": "h2"
							}
						},
						{
							"component": "TextBox",
							"props": {
								"text": "Layout config is a recursive tree."
							}
						},
						{
							"component": "CodeBlock",
							"props": {
								"code": "export interface LayoutConfig<C extends Record<string, Component<any>>> {\n\tid?: string;\n\twidth?: string;\n\tcomponent?: keyof C & string;\n\tprops?: Record<string, unknown>;\n\tnodeClass?: string;\n\twrapperClass?: string;\n\tlayoutClass?: string;\n\tcols?: LayoutConfig<C>[];\n\trows?: LayoutConfig<C>[];\n\tposX?: 'left' | 'right' | 'middle';\n\tposY?: 'top' | 'bottom' | 'middle';\n\twrap?: 'wrap' | 'nowrap';\n\tgap?: string;\n}",
								"language": "ts"
							}
						}
					]
				}
			]
		}
	]
}
